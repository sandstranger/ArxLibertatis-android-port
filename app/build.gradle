plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}
apply plugin: 'kotlin-kapt'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('release-keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.arxlibertatis'
    compileSdk versions.target_sdk

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.arxlibertatis"
        minSdk versions.min_sdk
        targetSdk versions.target_sdk
        versionCode 2
        versionName '1.3.1'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ndk {
            abiFilters = []
            abiFilters.addAll(abi_filters)
        }
        externalNativeBuild {
            cmake {
                arguments"-DANDROID_PLATFORM=android-$versions.native_android_platform_version",
                        "-DCMAKE_CXX_FLAGS_RELWITHDEBINFO=-O3 -ffast-math -flto=thin -DNDEBUG",
                        "-DCMAKE_CXX_FLAGS_RELWITHDEBINFO=-O3 -ffast-math -flto=thin -DNDEBUG",
                        "-DCMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO=-flto=thin -Wl,-plugin-opt=-emulated-tls -fuse-ld=lld"

            }
        }
    }

    externalNativeBuild {
        cmake {
            path "$rootProject.rootDir/CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'boolean', 'DEBUG', 'true'
        }

        release {
            buildConfigField 'boolean', 'DEBUG', 'false'
            signingConfig signingConfigs.release
        }

        debug {
            jniDebuggable true
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.15'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildToolsVersion versions.build_tools_version
    ndkVersion versions.ndk_version
}

preBuild.dependsOn ":libopenal:build", ":freetype2:build",":gl4es:build",
        ":glm:build",":zlib:build",':sdl2:android-project:app:build'

dependencies {
    //native deps
    implementation project(':libopenal')
    implementation project(':freetype2')
    implementation project(':glm')
    implementation project(':zlib')
    implementation project(':sdl2:android-project:app')
    implementation project(':gl4es')

    implementation libs.ini4j

    //dagger2
    implementation libs.dagger.android
    implementation libs.dagger.android.support
    kapt libs.dagger.android.processor

    implementation libs.core

    //moxy
    implementation libs.moxy.androidx
    kapt libs.moxy.compiler

    //support libs
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.preference.ktx
    implementation libs.material
    implementation libs.androidx.cardview
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}